{"ast":null,"code":"var _jsxFileName = \"D:\\\\web\\\\React\\\\school_react\\\\src\\\\Admin\\\\AdminGallery.js\",\n  _s = $RefreshSig$();\nimport \"../Admin/Style/AdminGallery.css\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminGallery() {\n  _s();\n  // ✅ Initialize images as an empty array\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    axios.get(\"https://jsonplaceholder.typicode.com/photos\").then(function (response) {\n      console.log(\"API Response:\", response.data); // ✅ Optional: Debug log\n      setImages(response.data);\n    }).catch(function (error) {\n      console.log(\"API Error:\", error);\n    });\n  }, []); // ✅ Add dependency array to run only once\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-main-gallery\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-gallery-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Gallery Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-image-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-btn\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/admin/uploadimage\",\n              children: \"Add Image +\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-gallery-grid\",\n        children: images === null || images === void 0 ? void 0 : images.slice(0, 20).map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-gallery-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.url,\n            alt: `Gallery-image ${index + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"admin-delete-btn\",\n            children: [\"Delete Image \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-trash-can\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, image.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(AdminGallery, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n_c = AdminGallery;\nexport default AdminGallery;\nvar _c;\n$RefreshReg$(_c, \"AdminGallery\");","map":{"version":3,"names":["Link","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminGallery","_s","images","setImages","get","then","response","console","log","data","catch","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","slice","map","image","index","src","url","alt","id","_c","$RefreshReg$"],"sources":["D:/web/React/school_react/src/Admin/AdminGallery.js"],"sourcesContent":["import \"../Admin/Style/AdminGallery.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction AdminGallery() {\r\n  // ✅ Initialize images as an empty array\r\n  const [images, setImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/photos\")\r\n      .then(function (response) {\r\n        console.log(\"API Response:\", response.data); // ✅ Optional: Debug log\r\n        setImages(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"API Error:\", error);\r\n      });\r\n  }, []); // ✅ Add dependency array to run only once\r\n\r\n  return (\r\n    <>\r\n      <div className=\"admin-main-gallery\">\r\n        <div className=\"admin-gallery-header\">\r\n          <h2>Gallery Images</h2>\r\n          <div className=\"add-image-btn\">\r\n            <button className=\"add-btn\">\r\n              <Link to=\"/admin/uploadimage\">Add Image +</Link>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"admin-gallery-grid\">\r\n          {/* ✅ Use optional chaining and .slice to limit images */}\r\n          {images?.slice(0, 20).map((image, index) => (\r\n            <div className=\"admin-gallery-item\" key={image.id}>\r\n              <img src={image.url} alt={`Gallery-image ${index + 1}`} />\r\n              <button className=\"admin-delete-btn\">\r\n                Delete Image <i className=\"fa-solid fa-trash-can\"></i>\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminGallery;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}